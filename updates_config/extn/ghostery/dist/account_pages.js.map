{"version":3,"file":"account_pages.js","mappings":"iEAmBA,IAAIA,EAAa,OAAO,QAAQ,YAAY,EAAE,OAAS,GAQhD,SAASC,GAAQ,CACvB,OAAOD,CACR,CAWO,SAASE,EAAYC,EAAiB,GAAM,CAClDH,EAAaG,CACd,CAUO,SAASC,KAAaC,EAAM,CAElC,MAAMC,EAAYD,EAAK,SAAS,EAAE,YAAY,EAAE,SAAS,OAAO,EAEhE,OAAAA,EAAK,QAAQ,GAAI,IAAI,KAAK,EAAG,mBAAmB,IAAK,EAEjDC,GACH,QAAQ,MAAM,GAAGD,CAAI,EACrB,QAAQ,MAAM,GAEd,QAAQ,IAAI,GAAGA,CAAI,EAEb,EACR,CAYO,SAASE,KAAOF,EAAM,CAC5B,OAAKL,EAIEI,EAAU,GAAGC,CAAI,EAHhB,EAIT,CASO,SAASG,KAAYH,EAAM,CACjC,OAAO,IAAI,QAAS,CAACI,EAASC,IAAW,CACxC,OAAO,QAAQ,MAAM,IAAIL,EAAK,OAASA,EAAO,KAAOM,GAAU,CAC9D,GAAI,OAAO,QAAQ,UAClBJ,EAAI,iBAAkB,OAAO,QAAQ,SAAS,EAC9CG,EAAO,OAAO,QAAQ,SAAS,MACzB,CACN,IAAIE,EAAS,KACb,GAAIP,EAAK,QAAU,EAClBO,EAASD,UACCN,EAAK,SAAW,EAAG,CAC7B,MAAMQ,EAAMR,EAAK,CAAC,EACdM,GAASA,EAAM,eAAeE,CAAG,IACpCD,EAASD,EAAME,CAAG,EAEpB,MACCD,EAAS,CAAC,EACVP,EAAK,QAASQ,GAAQ,CACrBD,EAAOC,CAAG,EAAI,KACVF,GAASA,EAAM,eAAeE,CAAG,IACpCD,EAAOC,CAAG,EAAIF,EAAME,CAAG,EAEzB,CAAC,EAEFJ,EAAQG,CAAM,CACf,CACD,CAAC,CACF,CAAE,CACH,CASO,SAASE,EAASC,EAAO,CAC/B,GAA2BA,GAAU,KACpC,MAAM,IAAI,MAAM,cAAc,EAE/B,OAAO,IAAI,QAAS,CAACN,EAASC,IAAW,CACxC,GAAI,CACH,OAAO,QAAQ,MAAM,IAAIK,EAAO,IAAM,CACjC,OAAO,QAAQ,WAClBX,EAAU,iBAAkB,OAAO,QAAQ,SAAS,EACpDM,EAAO,OAAO,QAAQ,SAAS,GAE/BD,EAAQM,CAAK,CAEf,CAAC,CACF,OAASC,EAAP,CACDZ,EAAU,iBAAkBY,CAAC,EAC7BN,EAAOM,CAAC,CACT,CACD,CAAE,CACH,CAYO,SAASC,EAAKJ,EAAKK,EAAO,CAChC,OAAI,OAAOA,EAAU,IACbV,EAASK,CAAG,EAEbC,EAAS,CAAE,CAACD,CAAG,EAAGK,CAAM,CAAC,CACjC,CAWO,SAASC,EAASC,EAAK,CAC7B,IAAIC,EAAO,EACPC,EACAC,EAEJ,GAAIH,EAAI,SAAW,EAClB,OAAOC,EAGR,IAAKE,EAAI,EAAGA,EAAIH,EAAI,OAAQG,IAC3BD,EAAYF,EAAI,WAAWG,CAAC,EAC5BF,GAASA,GAAQ,GAAKA,EAAQC,EAC9BD,GAAQA,EAGT,OAAOA,CACR,CAGO,SAASG,EAASC,EAAO,CAE/B,MAAMC,EADYD,EAAM,MAAM,GAAG,EAAE,CAAC,EACX,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EACvDE,EAAc,mBACnB,OAAO,KAAKD,CAAM,EAChB,MAAM,EAAE,EACR,IAAIE,GAAK,IAAK,KAAKA,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE,IAAK,MAAM,EAAE,GAAG,EAC9D,KAAK,EAAE,CACV,EAEA,OAAO,KAAK,MAAMD,CAAW,CAC9B,CAEO,SAASE,GAAa,CAC5B,OAAO,IAAI,KAAK,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,CAC7C,CC7LA,MAAMC,EAAkB,IAAM,CACzB,OAAO,QAAQ,WAClBvB,EAAI,yBAA0B,OAAO,QAAQ,SAAS,CAExD,EAWO,SAAS,EAAqBwB,EAAMC,EAASC,EAAS,GAAI,CAChE,OAAO,IAAI,QAASxB,GAAY,CAC/B,OAAO,QAAQ,YAAY,CAC1B,KAAAsB,EACA,QAAAC,EACA,OAAAC,CACD,EAAIC,GAAa,CACZ,OAAO,QAAQ,YAClB3B,EAAI,OAAO,QAAQ,UAAWwB,EAAMC,CAAO,EAC3CvB,EAAQ,EAAK,GAEdA,EAAQyB,CAAQ,CACjB,CAAC,CACF,CAAC,CACF,CAcO,SAAS,EAAYH,EAAMC,EAASC,EAAS,GAAIE,EAAWL,EAAgB,EAAG,CACrF,OAAAvB,EAAI,2CAA4CwB,CAAI,EAC7C,OAAO,QAAQ,YAAY,CACjC,KAAAA,EACA,QAAAC,EACA,OAAAC,CACD,EAAGE,CAAQ,CACZ,CAKO,SAASC,EAAwB,EAAG,CAC1C,EAAE,eAAe,EAEjB,IAAIC,EAAU,EAAE,OAChB,KAAO,CAACA,EAAQ,MACfA,EAAUA,EAAQ,cAEnB,KAAM,CAAE,KAAAC,CAAK,EAAID,EAEjB,EAAY,aAAc,CACzB,IAAKC,EACL,cAAe,EAChB,CAAC,CACF,CAOO,SAASC,GAAuB,CACtC,EAAY,8BAA8B,EAC1C,OAAO,MAAM,CACd,CAOO,SAASC,EAAiBC,EAAK,CACrC,EAAY,2BAA4B,CAAE,IAAAA,CAAI,CAAC,EAC/C,OAAO,MAAM,CACd,CAOO,SAASC,EAAgB,EAAG,CAClC,EAAE,eAAe,EACjB,EAAY,yBAAyB,EACrC,OAAO,MAAM,CACd,CAOO,SAASC,EAAuB,EAAG,CACzC,EAAE,eAAe,EACjB,EAAY,oBAAoB,CACjC,CC3Ge,WAASV,EAAQ,CAS/B,SAASW,EAAqBb,EAAMC,EAAS,CAC5C,OAAO,EAAwBD,EAAMC,EAASC,CAAM,CACrD,CAWA,SAASY,EAAYd,EAAMC,EAASG,EAAU,CAC7C5B,EAAI,UAAU0B,uBAA6BF,CAAI,EAC/C,EAAiBA,EAAMC,EAASC,EAAQE,CAAQ,CACjD,CAWA,SAASW,EAAwBf,EAAMC,EAASG,EAAU,CACzD5B,EAAI,UAAU0B,2CAAiDF,CAAI,EACnE,EAAiBA,EAAMC,EAAS,GAAIG,CAAQ,CAC7C,CAEA,MAAO,CACN,qBAAAS,EACA,YAAAC,EACA,wBAAAC,CACD,CACD,CClDA,MAAM,EAAMC,EAAU,eAAe,EAC/B,CAAE,YAAAF,CAAY,EAAI,GAKW,SAASG,EAAQ,CAMnD,MAAMC,EAAa,CAClB,oBACA,uBACA,sBACA,sCACA,oBACD,EACMC,EAAc,UAAW,CAC9BD,EAAW,QAAQlB,GAAQiB,EAAO,iBAAiBjB,EAAM,IAAMc,EAAYd,CAAI,CAAC,CAAC,CAClF,EAEA,MAAO,CAMN,MAAO,CACNmB,EAAY,CACb,CACD,CACD,GAAE,OAAQ,QAAQ,EAEQ,KAAK,C","sources":["webpack://@ghostery/extension-manifest-v2/./src/utils/common.js","webpack://@ghostery/extension-manifest-v2/./app/panel/utils/msg.js","webpack://@ghostery/extension-manifest-v2/./app/content-scripts/utils/msg.js","webpack://@ghostery/extension-manifest-v2/./app/content-scripts/account_pages.js"],"sourcesContent":["/**\n * Common Methods\n *\n * Methods and properties that are shared between app and src modules.\n * NOTE: In order to save space, this file should not have any module imports.\n *\n * Ghostery Browser Extension\n * https://www.ghostery.com/\n *\n * Copyright 2019 Ghostery, Inc. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0\n */\n\n// DO NOT IMPORT MODULES TO THIS FILE\n\n// Private variable that controls whether calls to log() produce the requested console output or do nothing\nlet _shouldLog = chrome.runtime.getManifest().debug || false;\n\n/**\n * Report whether logging is active\n * @memberOf BackgroundUtils\n *\n * @return {Boolean}\t\t\t\t\tTrue if logging is active and false otherwise\n */\nexport function isLog() {\n\treturn _shouldLog;\n}\n\n/**\n * Activate / deactivate logging\n * Allows modules like the console debugger to override the manifest debug setting\n * @memberOf BackgroundUtils\n *\n * @param  {Boolean} shouldActivate\t\tWhether logging should be activated or deactivated. Optional; defaults to true\n *\n * @return {undefined}\t\t\t\t\tNo explicit return value\n */\nexport function activateLog(shouldActivate = true) {\n\t_shouldLog = shouldActivate;\n}\n\n/**\n * Log to console regardless of log settings\n * @memberOf BackgroundUtils\n *\n * @param  {array} args \tES6 Rest parameter\n *\n * @return {boolean}\t\tAlways true\n */\nexport function alwaysLog(...args) {\n\t// check for error messages\n\tconst hasErrors = args.toString().toLowerCase().includes('error');\n\t// add timestamp to first position\n\targs.unshift(`${(new Date()).toLocaleTimeString()}\\t`);\n\n\tif (hasErrors) {\n\t\tconsole.error(...args); // eslint-disable-line no-console\n\t\tconsole.trace(); // eslint-disable-line no-console\n\t} else {\n\t\tconsole.log(...args); // eslint-disable-line no-console\n\t}\n\treturn true;\n}\n\n/**\n * Custom Debug Logger.\n * Unliked alwaysLog, only logs if logging is turned on\n * through the manifest and/or GhosteryDebugger\n * @memberOf BackgroundUtils\n *\n * @param  {array} args \tES6 Rest parameter\n *\n * @return {boolean}  \t\tfalse if disabled, otherwise true\n */\nexport function log(...args) {\n\tif (!_shouldLog) {\n\t\treturn false;\n\t}\n\n\treturn alwaysLog(...args);\n}\n\n/**\n * Get multiple prefs.\n * @memberOf BackgroundUtils\n *\n * @param  {array} args \tES6 Rest Parameter\n * @return {Promise} \t\tObject if multiple prefs, single value for one pref\n */\nexport function prefsGet(...args) {\n\treturn new Promise(((resolve, reject) => {\n\t\tchrome.storage.local.get(args.length ? args : null, (items) => {\n\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\tlog('prefsGet ERROR', chrome.runtime.lastError);\n\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t} else {\n\t\t\t\tlet result = null;\n\t\t\t\tif (args.length <= 0) {\n\t\t\t\t\tresult = items;\n\t\t\t\t} else if (args.length === 1) {\n\t\t\t\t\tconst key = args[0]; // extract value from array\n\t\t\t\t\tif (items && items.hasOwnProperty(key)) {\n\t\t\t\t\t\tresult = items[key];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult = {}; // instantiate an empty object\n\t\t\t\t\targs.forEach((key) => {\n\t\t\t\t\t\tresult[key] = null;\n\t\t\t\t\t\tif (items && items.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tresult[key] = items[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tresolve(result);\n\t\t\t}\n\t\t});\n\t}));\n}\n\n/**\n * Set multiple prefs.\n * @memberOf BackgroundUtils\n *\n * @param  {Object} prefs \tjsonifyable key/value pairs of prefs\n * @return {Promise} \t\tprefs object which has been set, or error\n */\nexport function prefsSet(prefs) {\n\tif (prefs === undefined || prefs === null) {\n\t\tthrow new Error('Bad argument');\n\t}\n\treturn new Promise(((resolve, reject) => {\n\t\ttry {\n\t\t\tchrome.storage.local.set(prefs, () => {\n\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\talwaysLog('prefsSet ERROR', chrome.runtime.lastError);\n\t\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(prefs);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\talwaysLog('prefsSet ERROR', e);\n\t\t\treject(e);\n\t\t}\n\t}));\n}\n\n/**\n * Get/Set single pref\n * Use prefs for persisting basic values to local storage. For User\n * Configuration properties, use Conf (which calls prefs).\n * @memberOf BackgroundUtils\n *\n * @param  {string} key   \t\t\tpref name\n * @param  {*} \t\tvalue \t\t\tpref value\n * @return {Promise}\t\t\t\tvalue which has been obtained or set, or error\n */\nexport function pref(key, value) {\n\tif (typeof value === 'undefined') {\n\t\treturn prefsGet(key);\n\t}\n\treturn prefsSet({ [key]: value });\n}\n\n/**\n * Generate hash code for a string\n * Used for checking the hash of the backup file, easy validation check.\n * Modified code from: http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n * @memberOf BackgroundUtils\n *\n * @param  {string} str \tinput string\n * @return {string} \t\thash code string\n */\nexport function hashCode(str) {\n\tlet hash = 0;\n\tlet character;\n\tlet i;\n\n\tif (str.length === 0) {\n\t\treturn hash;\n\t}\n\n\tfor (i = 0; i < str.length; i++) {\n\t\tcharacter = str.charCodeAt(i);\n\t\thash = ((hash << 5) - hash) + character; // eslint-disable-line no-bitwise\n\t\thash &= hash; // eslint-disable-line no-bitwise\n\t}\n\n\treturn hash;\n}\n\n// source https://stackoverflow.com/a/38552302\nexport function parseJwt(token) {\n\tconst base64Url = token.split('.')[1];\n\tconst base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n\tconst jsonPayload = decodeURIComponent(\n\t\twindow.atob(base64)\n\t\t\t.split('')\n\t\t\t.map(c => `%${(`00${c.charCodeAt(0).toString(16)}`).slice(-2)}`)\n\t\t\t.join('')\n\t);\n\n\treturn JSON.parse(jsonPayload);\n}\n\nexport function getISODate() {\n\treturn new Date().toISOString().split('T')[0];\n}\n","/**\n * Message Utilities\n *\n * Ghostery Browser Extension\n * https://www.ghostery.com/\n *\n * Copyright 2019 Ghostery, Inc. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0\n */\n\nimport { log } from '../../../src/utils/common';\n\n/**\n * Default callback handler for sendMessage. Allows us to handle\n * 'Unchecked runtime.lastError: The message port closed before a response was received' errors.\n * This occurs when the `chrome.runtime.onmessage` handler returns `false` with no `callback()`\n * but `chrome.runtime.sendMessage` has been passed a default callback.\n */\nconst defaultCallback = () => {\n\tif (chrome.runtime.lastError) {\n\t\tlog('defaultCallback error:', chrome.runtime.lastError);\n\t}\n};\n\n/**\n * Send a message to the handlers in src/background wrapped in a\n * promise. This should be used for messages that require a callback.\n * @memberOf PanelUtils\n *\n * @param  {string} \tname \t\tmessage name\n * @param  {Object} \tmessage \tmessage data\n * @return {Promise}\n */\nexport function sendMessageInPromise(name, message, origin = '') {\n\treturn new Promise((resolve) => {\n\t\tchrome.runtime.sendMessage({\n\t\t\tname,\n\t\t\tmessage,\n\t\t\torigin,\n\t\t}, (response) => {\n\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\tlog(chrome.runtime.lastError, name, message);\n\t\t\t\tresolve(false);\n\t\t\t}\n\t\t\tresolve(response);\n\t\t});\n\t});\n}\n\n/**\n * Send a message to the handlers in src/background. This should be used for\n * messages that don't require a callback.\n * @memberOf PanelUtils\n *\n * @param  {string} \tname \t\tmessage name\n * @param  {Object} \tmessage \tmessage data\n * @param  {string} \torigin\t \tmessage origin\n * @param  {function} \tcallback \tcallback message\n * @return {Object}\t\tresponse\n * @todo  runtime.sendMessage does not return any value.\n */\nexport function sendMessage(name, message, origin = '', callback = defaultCallback()) {\n\tlog('Panel sendMessage: sending to background', name);\n\treturn chrome.runtime.sendMessage({\n\t\tname,\n\t\tmessage,\n\t\torigin,\n\t}, callback);\n}\n\n/**\n * Handle clicks on links with a fixed destination\n */\nexport function handleClickOnNewTabLink(e) {\n\te.preventDefault();\n\n\tlet linkTag = e.target;\n\twhile (!linkTag.href) {\n\t\tlinkTag = linkTag.parentElement;\n\t}\n\tconst { href } = linkTag;\n\n\tsendMessage('openNewTab', {\n\t\turl: href,\n\t\tbecome_active: true,\n\t});\n}\n\n/**\n * Send a message to open a Account.Subscription tab.\n * This should be used for messages that don't require a callback.\n * @memberOf PanelUtils\n */\nexport function openSubscriptionPage() {\n\tsendMessage('account.openSubscriptionPage');\n\twindow.close();\n}\n\n/**\n * Send a message to open a Checkout tab.\n * This should be used for messages that don't require a callback.\n * @memberOf PanelUtils\n */\nexport function openCheckoutPage(utm) {\n\tsendMessage('account.openCheckoutPage', { utm });\n\twindow.close();\n}\n\n/**\n * Send a message to open a Support tab based on the current user state.\n * This should be used for messages that don't require a callback.\n * @memberOf PanelUtils\n */\nexport function openSupportPage(e) {\n\te.preventDefault();\n\tsendMessage('account.openSupportPage');\n\twindow.close();\n}\n\n/**\n * Send a message to open Account-Web if signed in or the Account Hub page if not\n * This should be used for messages that don't require a callback.\n * @memberOf PanelUtils\n */\nexport function openAccountPageAndroid(e) {\n\te.preventDefault();\n\tsendMessage('openAccountAndroid');\n}\n","/**\n * Message Helper for Content Scripts\n *\n * Ghostery Browser Extension\n * https://www.ghostery.com/\n *\n * Copyright 2019 Ghostery, Inc. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0\n */\n/**\n * @namespace ContentScriptUtils\n */\nimport { log } from '../../../src/utils/common';\nimport { sendMessageInPromise as panelSendPromiseMessage, sendMessage as panelSendMessage } from '../../panel/utils/msg';\n\n/**\n * Message wrapper function\n * @param  {string} origin \t\tcontent script origin\n * @return {Object}\t\t\t\tset of APIs for handling messages\n */\nexport default function(origin) {\n\t/**\n\t * Send a message wrapped in a promise.\n\t * @memberOf  ContentScriptUtils\n\t *\n\t * @param  {string} \tname \t\tmessage name\n\t * @param  {Object} \tmessage \tmessage data\n\t * @return {Promise}\t\t\t\tresponse or null\n\t */\n\tfunction sendMessageInPromise(name, message) {\n\t\treturn panelSendPromiseMessage(name, message, origin);\n\t}\n\n\t/**\n\t * Send a message with an 'origin' parameter. This\n\t * will be picked up by handlers of messages coming from different context scripts.\n\t * @memberOf  ContentScriptUtils\n\t *\n\t * @param  {string} \tname \t\tmessage name\n\t * @param  {Object} \tmessage \tmessage data\n\t * @param  {function} \t[callback] \tcallback called by the message recipient\n\t */\n\tfunction sendMessage(name, message, callback) {\n\t\tlog(`origin ${origin} sending to handler`, name);\n\t\tpanelSendMessage(name, message, origin, callback);\n\t}\n\n\t/**\n\t * Send a message without an `origin` parameter. This will\n\t * be picked up by the general onMessageHandler in src/background.\n\t * @memberOf  ContentScriptUtils\n\t *\n\t * @param  {string} \tname \t\tmessage name\n\t * @param  {Object} \tmessage \tmessage data\n\t * @param  {function} \t[callback] \tcallback called by the message recipient\n\t */\n\tfunction sendMessageToBackground(name, message, callback) {\n\t\tlog(`origin ${origin} sending to background onMessageHandler`, name);\n\t\tpanelSendMessage(name, message, '', callback);\n\t}\n\n\treturn {\n\t\tsendMessageInPromise,\n\t\tsendMessage,\n\t\tsendMessageToBackground,\n\t};\n}\n","/**\n * Ghostery Account Events\n *\n * This file connects the extension to all Account pages\n *\n * Ghostery Browser Extension\n * https://www.ghostery.com/\n *\n * Copyright 2019 Ghostery, Inc. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0\n */\n/**\n * @namespace AccountPagesContentScript\n */\nimport msgModule from './utils/msg';\n\nconst msg = msgModule('account_pages');\nconst { sendMessage } = msg;\n/**\n * Use to call init to initialize functionality\n * @var  {Object} initialized to an object with init method as its property\n */\nconst AccountPagesContentScript = (function(window) {\n\t/**\n\t * Initialize functionality of this script.\n\t * @memberOf AccountPagesContentScript\n\t * @package\n\t */\n\tconst _listeners = [\n\t\t'accountPage.login',\n\t\t'accountPage.register',\n\t\t'accountPage.getUser',\n\t\t'accountPage.getUserSubscriptionData',\n\t\t'accountPage.logout',\n\t];\n\tconst _initialize = function() {\n\t\t_listeners.forEach(name => window.addEventListener(name, () => sendMessage(name)));\n\t};\n\n\treturn {\n\t\t/**\n\t\t * Initialize functionality of this script.\n\t\t * @memberOf AccountPagesContentScript\n\t\t * @public\n\t\t */\n\t\tinit() {\n\t\t\t_initialize();\n\t\t}\n\t};\n}(window, document));\n\nAccountPagesContentScript.init();\n"],"names":["_shouldLog","isLog","activateLog","shouldActivate","alwaysLog","args","hasErrors","log","prefsGet","resolve","reject","items","result","key","prefsSet","prefs","e","pref","value","hashCode","str","hash","character","i","parseJwt","token","base64","jsonPayload","c","getISODate","defaultCallback","name","message","origin","response","callback","handleClickOnNewTabLink","linkTag","href","openSubscriptionPage","openCheckoutPage","utm","openSupportPage","openAccountPageAndroid","sendMessageInPromise","sendMessage","sendMessageToBackground","msg","window","_listeners","_initialize"],"sourceRoot":""}